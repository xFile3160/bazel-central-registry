From b73e26c8a78239acd9d897ad002b4dcffd4d1274 Mon Sep 17 00:00:00 2001
From: Cesare Mercurio <cesare.mercurio@gmail.com>
Date: Fri, 15 Dec 2023 23:37:28 -0800
Subject: [PATCH] VVI-Halide-patch: add BUILD file

Summary:
Adds build file for bazel environment

Test plan:
integration in vvplatform
---
 .gitignore |  1 -
 BUILD      | 65 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
 halide.bzl | 26 ++++++++++++++++++++++
 3 files changed, 91 insertions(+), 1 deletion(-)
 create mode 100644 BUILD
 create mode 100644 halide.bzl

diff --git a/.gitignore b/.gitignore
index 4a19876f8..9fb78cdc8 100644
--- a/.gitignore
+++ b/.gitignore
@@ -247,7 +247,6 @@ TAGS
 !packaging/ubuntu/changelog
 !packaging/ubuntu/copyright
 !packaging/ubuntu/triggers
-
 # Allow XCode PCHs in the HelloiOS app
 !apps/HelloiOS/**/*-Prefix.pch
 
diff --git a/BUILD b/BUILD
new file mode 100644
index 000000000..117d0a48d
--- /dev/null
+++ b/BUILD
@@ -0,0 +1,65 @@
+config_setting(
+    name = "windows",
+    values = {"cpu": "x64_windows"},
+    define_values = {
+        "host": "true"
+    },
+    visibility = ["//visibility:public"],
+)
+
+load(":halide.bzl", "halide_language_copts")
+
+licenses(["notice"])
+
+package(
+    default_visibility = ["//visibility:public"],
+)
+
+cc_library(
+    name = "language",
+    hdrs = ["include/Halide.h"],
+    copts = halide_language_copts(),
+    includes = ["include"],
+    deps = [
+        ":runtime",
+    ],
+)
+
+cc_library(
+    name = "runtime",
+    hdrs = glob([
+        "include/HalideRuntime*.h",
+        "include/HalideBuffer*.h",
+    ]),
+    includes = ["include"],
+)
+
+cc_library(
+    name = "lib_halide_static",
+    srcs = select({
+        "@bazel_tools//src/conditions: [
+            "bin/Release/Halide.dll",
+            "lib/Release/Halide.lib",
+        ],
+        "//conditions:default": [
+            "lib/libHalide.a",
+        ],
+    }),
+    visibility = ["//visibility:public"],
+)
+
+cc_library(
+    name = "gengen",
+    srcs = [
+        "share/Halide/tools/GenGen.cpp",
+    ],
+    includes = [
+        "include",
+        "share/Halide/tools",
+    ],
+    visibility = ["//visibility:public"],
+    deps = [
+        ":language",
+        ":lib_halide_static",
+    ],
+)
\ No newline at end of file
diff --git a/halide.bzl b/halide.bzl
new file mode 100644
index 000000000..f8c05eadc
--- /dev/null
+++ b/halide.bzl
@@ -0,0 +1,26 @@
+"""Bazel build rules for Halide."""
+
+load("@bazel_skylib//lib:collections.bzl", "collections")
+load("@bazel_tools//tools/cpp:toolchain_utils.bzl", "use_cpp_toolchain")
+
+def halide_language_copts():
+    _common_opts = [
+        "-fPIC",
+        "-frtti",
+        "-Wno-conversion",
+        "-Wno-sign-compare",
+    ]
+    _posix_opts = [
+        "$(STACK_FRAME_UNLIMITED)",
+        "-fno-exceptions",
+        "-funwind-tables",
+        "-fvisibility-inlines-hidden",
+    ]
+    _msvc_opts = [
+        "-D_CRT_SECURE_NO_WARNINGS",
+        "/MD",
+    ]
+    return _common_opts + select({
+        "//conditions:default": _posix_opts,
+        "//:windows": _msvc_opts,
+    })
\ No newline at end of file
-- 
2.34.1

